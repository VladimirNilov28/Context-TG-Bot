"""Entry point: –¥—ã–º-—Ç–µ—Å—Ç –ë–î –∏ –ø–æ–∏—Å–∫–∞."""

from sqlalchemy import text
from app.db.session import engine, get_session
from app.core.config import settings
from app.services.search import search_similar


def main() -> None:
    # 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    with engine.connect() as conn:
        version = conn.execute(text("SELECT version()")).scalar()
        print("‚úÖ DB version:", version)

    # 2) –°–º–æ—Ç—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞
    with get_session() as s:
        n_docs = s.execute(text("SELECT count(*) FROM documents")).scalar()
        n_chunks = s.execute(text("SELECT count(*) FROM chunks")).scalar()
        n_emb = s.execute(text("SELECT count(*) FROM embeddings")).scalar()

    print(f"üìä counts -> documents={n_docs}, chunks={n_chunks}, embeddings={n_emb}")

    # 3) –ï—Å–ª–∏ –µ—Å—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ ‚Äî –ø—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ—Ö–æ–∂–µ—Å—Ç–∏
    if n_emb and n_emb > 0:
        # –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –∑–∞–ø—Ä–æ—Å–Ω—ã–π –≤–µ–∫—Ç–æ—Ä: –µ–¥–∏–Ω–∏—á–Ω—ã–π –≤–µ–∫—Ç–æ—Ä –ø–æ –ø–µ—Ä–≤–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–µ.
        # –í —Ä–µ–∞–ª–µ —Å—é–¥–∞ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—à—å —ç–º–±–µ–¥–¥–∏–Ω–≥ –≤–æ–ø—Ä–æ—Å–∞.
        qvec = [1.0] + [0.0] * (settings.EMBEDDING_DIM - 1)
        top = search_similar(qvec, top_k=5)
        print("üîé top matches:")
        for i, row in enumerate(top, 1):
            print(f"  {i:02d}. chunk_id={row['chunk_id']} dist={row['distance']:.6f}")
    else:
        print("‚ÑπÔ∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ embeddings ‚Äî –ø–æ–∏—Å–∫ –ø—Ä–æ–ø—É—â–µ–Ω. –ó–∞–≥—Ä—É–∑–∏–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–∑–∂–µ.")


if __name__ == "__main__":
    main()
